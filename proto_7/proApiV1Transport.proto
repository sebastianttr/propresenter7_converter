syntax = "proto3";

package rv.data;

import "proApiV1LayerType.proto";
import "uuid.proto";

message API_v1_Transport_Request {
  oneof Request {
    rv.data.API_v1_Transport_Request.Play play = 1;
    rv.data.API_v1_Transport_Request.Pause pause = 2;
    rv.data.API_v1_Transport_Request.SkipBackward skip_backward = 3;
    rv.data.API_v1_Transport_Request.SkipForward skip_forward = 4;
    rv.data.API_v1_Transport_Request.GoToEnd go_to_end = 5;
    rv.data.API_v1_Transport_Request.GetTime get_time = 6;
    rv.data.API_v1_Transport_Request.PutTime put_time = 7;
    rv.data.API_v1_Transport_Request.GetAutoAdvance get_auto_advance = 8;
    rv.data.API_v1_Transport_Request.DeleteAutoAdvance delete_auto_advance = 9;
    rv.data.API_v1_Transport_Request.GetCurrentMedia get_current_media = 10;
  }


  message Play {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;

  }
  message Pause {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;

  }
  message SkipBackward {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;
    double seconds = 2;

  }
  message SkipForward {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;
    double seconds = 2;

  }
  message GoToEnd {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;
    double seconds = 2;

  }
  message GetTime {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;

  }
  message PutTime {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;
    double seconds = 2;

  }
  message GetAutoAdvance {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;

  }
  message DeleteAutoAdvance {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;

  }
  message GetCurrentMedia {
    enum API_v1_LayerType {
      audio = 0;
      props = 1;
      messages = 2;
      announcements = 3;
      slide = 4;
      media = 5;
      video_input = 6;
    }
    API_v1_LayerType layer = 1;

  }
}
message API_v1_Transport_Response {
  oneof Response {
    rv.data.API_v1_Transport_Response.Play play = 1;
    rv.data.API_v1_Transport_Response.Pause pause = 2;
    rv.data.API_v1_Transport_Response.SkipBackward skip_backward = 3;
    rv.data.API_v1_Transport_Response.SkipForward skip_forward = 4;
    rv.data.API_v1_Transport_Response.GoToEnd go_to_end = 5;
    rv.data.API_v1_Transport_Response.GetTime get_time = 6;
    rv.data.API_v1_Transport_Response.PutTime put_time = 7;
    rv.data.API_v1_Transport_Response.GetAutoAdvance get_auto_advance = 8;
    rv.data.API_v1_Transport_Response.DeleteAutoAdvance delete_auto_advance = 9;
    rv.data.API_v1_Transport_Response.GetCurrentMedia get_current_media = 10;
  }


  message Play {

  }
  message Pause {

  }
  message SkipBackward {

  }
  message SkipForward {

  }
  message GoToEnd {

  }
  message GetTime {
    double seconds = 1;

  }
  message PutTime {

  }
  message GetAutoAdvance {
    bool auto_advance = 1;

  }
  message DeleteAutoAdvance {

  }
  message GetCurrentMedia {
    bool is_playing = 1;
    rv.data.UUID uuid = 2;
    string name = 3;
    string artist = 4;
    bool audio_only = 5;
    double duration = 6;

  }
}
